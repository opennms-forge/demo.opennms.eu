---
version: '2.3'

volumes:
  data-postgres: {}
  data-opennms: {}
  data-grafana: {}
  data-esdata1: {}
  data-esdata2: {}

networks:
  net-demo:
    driver: bridge
    ipam:
      config:
        - subnet: 172.29.0.0/16

services:
  database:
    image: postgres:10
    container_name: demo-database
    env_file:
      - .postgres.env
    environment:
      - TZ=Europe/Berlin
    volumes:
      - data-postgres:/var/lib/postgresql/data
    networks:
      net-demo:
        ipv4_address: 172.29.0.5
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 30s
      retries: 3
    restart: always

  horizon:
    image: opennms/horizon-core-web:23.0.2-1
    container_name: demo-horizon
    mem_limit: 3072M
    cap_add:
      - NET_ADMIN
    networks:
      net-demo:
        ipv4_address: 172.29.0.6
    env_file:
      - .opennms.env
      - .postgres.env
    environment:
      - TZ=Europe/Berlin
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - data-opennms:/opennms-data
      - ./etc-overlay:/opt/opennms-etc-overlay
      - ./logs:/opennms-data/logs
    command: ["-s"]
    ports:
      - "8980:8980"
      - "61616:61616"
    healthcheck:
      test: [ "CMD", "curl", "-f", "-I", "http://localhost:8980/opennms/login.jsp" ]
      interval: 1m
      timeout: 5s
      retries: 3
    restart: always
      
  pris:
    image: opennms/pris:1.1.6
    container_name: demo-pris
    networks:
      net-demo:
        ipv4_address: 172.29.0.7
    environment:
      - TZ=Europe/Berlin
    volumes:
      - ./requisitions:/opt/opennms-pris/requisitions
      - ./scriptsteps:/opt/opennms-pris/scriptsteps
    ports:
      - "8000:8000"
    healthcheck:
      test: [ "CMD", "curl", "-f", "-I", "http://localhost:8000/documentation/index.html" ]
      interval: 1m
      timeout: 5s
      retries: 3
    restart: always

  grafana:
    image: grafana/grafana:5.4.3
    container_name: demo-grafana
    networks:
      net-demo:
        ipv4_address: 172.29.0.8
    environment:
      - TZ=Europe/Berlin
      - GF_SERVER_ROOT_URL=http://localhost
    env_file:
      - .grafana.env
    volumes:
      - data-grafana:/var/lib/grafana
      - ./grafana/provisioning/dashboards/default.yaml:/etc/grafana/provisioning/dashboards/default.yaml
      - ./grafana/provisioning/dashboards/OpenNMS_Alarm_Board.json:/var/lib/grafana/dashboards/OpenNMS_Alarm_Board.json
      - ./grafana/custom.ini:/etc/grafana/conf/custom.ini
    ports:
      - "3000:3000"
    user: "472"
    healthcheck:
      test: [ "CMD", "curl", "-f", "-I", "http://localhost:3000" ]
      interval: 1m
      timeout: 5s
      retries: 3
    command: --config /etc/grafana/conf/custom.ini
    restart: always

  dc.srv.01:
    image: opennms/net-snmp:5.7.3-r11-b1
    container_name: dc.srv.01
    networks:
      net-demo:
        ipv4_address: 172.29.0.30
    environment:
      - TZ=Europe/Berlin
    healthcheck:
      test: [ "CMD", "snmpget", "-v", "2c", "-c", "public", "localhost", ".1.3.6.1.2.1.1.2.0" ]
      interval: 1m
      timeout: 5s
      retries: 3
    restart: always

  dc.srv.02:
    image: opennms/net-snmp:5.7.3-r11-b1
    container_name: dc.srv.02
    networks:
      net-demo:
        ipv4_address: 172.29.0.31
    environment:
      - TZ=Europe/Berlin
    healthcheck:
      test: [ "CMD", "snmpget", "-v", "2c", "-c", "public", "localhost", ".1.3.6.1.2.1.1.2.0" ]
      interval: 1m
      timeout: 5s
      retries: 3
    restart: always

  dc.web.01:
    image: httpd
    container_name: dc.web.01
    networks:
      net-demo:
        ipv4_address: 172.29.0.50
    environment:
      - TZ=Europe/Berlin
    restart: always

  samba:
    image: dperson/samba
    container_name: samba
    networks:
      net-demo:
        ipv4_address: 172.29.0.32
    command: ["-u user1;badpass", "-s public;/share", "-s user1 private;/user1;no;no;no;user1" ]
    volumes:
      - ./samba:/user1
    environment:
      - TZ=Europe/Berlin
    restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.5.4
    container_name: elasticsearch1
    environment:
      - cluster.name=demo-elasticsearch-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data-esdata1:/usr/share/elasticsearch/data
    networks:
      net-demo:
        ipv4_address: 172.29.0.33
    restart: always

  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.5.4
    container_name: elasticsearch2
    environment:
      - cluster.name=demo-elasticsearch-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.zen.ping.unicast.hosts=elasticsearch1"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data-esdata2:/usr/share/elasticsearch/data
    networks:
      net-demo:
        ipv4_address: 172.29.0.34
    restart: always

  nginx1:
    image: nginx:latest
    container_name: demo_nginx1
    networks:
      net-demo:
        ipv4_address: 172.29.0.35

  nginx2:
    image: nginx:latest
    container_name: demo_nginx2
    networks:
      net-demo:
        ipv4_address: 172.29.0.36

  nginx3:
    image: nginx:latest
    container_name: demo_nginx3
    networks:
      net-demo:
        ipv4_address: 172.29.0.37
